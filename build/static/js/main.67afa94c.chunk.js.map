{"version":3,"sources":["components/Note.js","components/Notifcation.js","services/notes.js","components/App.js","index.js"],"names":["Note","note","toggleImportance","label","important","content","onClick","Notification","message","dismiss","className","baseUrl","exports","getAll","request","axios","get","nonExisting","id","date","then","response","data","concat","create","newObject","post","update","put","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","find","n","updatedNote","returnedNote","catch","error","toggleImportanceOf","onSubmit","e","preventDefault","noteObject","Date","toISOString","Math","random","type","value","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"wLAceA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACfC,EAAQF,EAAKG,UAChB,qBAAuB,iBAE1B,OACC,+BACEH,EAAKI,QACN,wBAAQC,QAASJ,EAAjB,SAAoCC,QCMxBI,EAbM,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAChC,OAAgB,OAAZD,EACI,KAIP,sBAAKE,UAAU,QAAf,UACEF,EACD,wBAAQE,UAAU,UAAUJ,QAASG,EAArC,sB,wBCTGE,EAAU,aAwBDC,EADC,CAAEC,OArBH,WACb,IAAMC,EAAUC,IAAMC,IAAIL,GACpBM,EAAc,CAClBC,GAAI,IACJb,QAAS,mCACTc,KAAM,2BACNf,WAAW,GAEb,OAAOU,EAAQM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAON,OAa7BO,OAVX,SAAAC,GAEb,OADgBV,IAAMW,KAAKf,EAASc,GACrBL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQTK,OALnB,SAACT,EAAIO,GAElB,OADgBV,IAAMa,IAAN,UAAajB,EAAb,YAAwBO,GAAMO,GAC/BL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UCmE5BO,EAhFH,SAACC,GAAW,IAAD,EACIC,mBAAS,IADb,mBACfC,EADe,KACRC,EADQ,OAEQF,qBAFR,mBAEfG,EAFe,KAENC,EAFM,OAGQJ,oBAAS,GAHjB,mBAGfK,EAHe,KAGNC,EAHM,OAIkBN,mBAAS,MAJ3B,mBAIfO,EAJe,KAIDC,EAJC,KAMtBC,qBAAU,WACTC,EACE5B,SACAO,MAAK,SAAAsB,GACLT,EAASS,QAET,IAEH,IAqCMC,EAAcP,EACjBJ,EACAA,EAAMY,QAAO,SAAA3C,GAAI,OAAIA,EAAKG,aAE7B,OACC,gCACC,uCACA,cAAC,EAAD,CAAcI,QAAS8B,EAAc7B,QAAS,kBAAM8B,EAAgB,SACpE,8BACC,yBAAQjC,QAAS,kBAAM+B,GAAYD,IAAnC,kBACOA,EAAU,YAAc,WAGhC,6BACEO,EAAYE,KAAI,SAAA5C,GAAI,OACpB,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,iBAAkB,kBApC3B,SAAAgB,GAC1B,IAAMjB,EAAO+B,EAAMc,MAAK,SAAAC,GAAC,OAAIA,EAAE7B,KAAOA,KAChC8B,EAAW,2BAAQ/C,GAAR,IAAcG,WAAYH,EAAKG,YAEhDqC,EACEd,OAAOT,EAAI8B,GACX5B,MAAK,SAAA6B,GACLhB,EAASD,EAAMa,KAAI,SAAA5C,GAAI,OAAIA,EAAKiB,KAAOA,EAAKjB,EAAOgD,SAEnDC,OAAM,SAAAC,GACNZ,EAAgB,SAAD,OACLtC,EAAKI,QADA,sCAGf4B,EAASD,EAAMY,QAAO,SAAAG,GAAC,OAAIA,EAAE7B,KAAOA,SAuBqBkC,CAAmBnD,EAAKiB,MAArEjB,EAAKiB,SAGlB,uBAAMmC,SAvDQ,SAAAC,GACfA,EAAEC,iBACF,IAAMC,EAAa,CAClBnD,QAAS6B,EACTf,MAAM,IAAIsC,MAAOC,cACjBtD,UAAWuD,KAAKC,SAAW,IAG5BnB,EACEjB,OAAOgC,GACPpC,MAAK,SAAA6B,GACLhB,EAASD,EAAMT,OAAO0B,IACtBd,EAAW,QA2CZ,UACC,uBACC0B,KAAK,OACLC,MAAO5B,EACP6B,SA1BqB,SAAAT,GACxBnB,EAAWmB,EAAEU,OAAOF,UA0BlB,wBAAQD,KAAK,SAAb,yBC5EJI,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.67afa94c.chunk.js","sourcesContent":["import React from 'react';\n\nconst Note = ({ note, toggleImportance }) => {\n\tconst label = note.important\n\t\t? \"make not important\" : \"make important\";\n\n\treturn (\n\t\t<li>\n\t\t\t{note.content}\n\t\t\t<button onClick={toggleImportance}>{label}</button>\n\t\t</li>\n\t);\n}\n \nexport default Note;","import React from 'react';\n\nconst Notification = ({ message, dismiss }) => {\n\tif (message === null) {\n\t\treturn null\n\t}\n\n\treturn (\n\t\t<div className=\"error\">\n\t\t\t{message}\n\t\t\t<button className=\"dismiss\" onClick={dismiss}>&times;</button>\n\t\t</div>\n\t)\n}\n\nexport default Notification;","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  const nonExisting = {\n    id: 10000,\n    content: 'This note is not saved to server',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true,\n  }\n  return request.then(response => response.data.concat(nonExisting))\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data);\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data);\n}\n\nconst exports = { getAll, create, update }\nexport default exports;","import React, { useState, useEffect } from 'react';\nimport Note from './Note';\nimport Notification from './Notifcation';\nimport '../style.css'\n\n\nimport noteService from '../services/notes'\n\nconst App = (props) => {\n\tconst [notes, setNotes] = useState([]);\n\tconst [newNote, setNewNote] = useState();\n\tconst [showAll, setShowAll] = useState(true)\n\tconst [errorMessage, setErrorMessage] = useState(null)\n\n\tuseEffect(() => {\n\t\tnoteService\n\t\t\t.getAll()\n\t\t\t.then(initialNotes => {\n\t\t\t\tsetNotes(initialNotes)\n\t\t\t})\n\t}, [])\n\n\tconst addNote = e => {\n\t\te.preventDefault();\n\t\tconst noteObject = {\n\t\t\tcontent: newNote,\n\t\t\tdate: new Date().toISOString(),\n\t\t\timportant: Math.random() < 0.5,\n\t\t}\n\n\t\tnoteService\n\t\t\t.create(noteObject)\n\t\t\t.then(returnedNote => {\n\t\t\t\tsetNotes(notes.concat(returnedNote))\n\t\t\t\tsetNewNote('')\n\t\t\t})\n\t}\n\n\tconst toggleImportanceOf = id => {\n\t\tconst note = notes.find(n => n.id === id);\n\t\tconst updatedNote = { ...note, important: !note.important };\n\n\t\tnoteService\n\t\t\t.update(id, updatedNote)\n\t\t\t.then(returnedNote => {\n\t\t\t\tsetNotes(notes.map(note => note.id !== id ? note : returnedNote));\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tsetErrorMessage(\n\t\t\t\t\t`Note '${note.content}' was already removed from server`\n\t\t\t\t)\n\t\t\t\tsetNotes(notes.filter(n => n.id !== id))\n\t\t\t})\n\t}\n\n\tconst handleNoteChange = e => {\n\t\tsetNewNote(e.target.value);\n\t}\n\n\tconst notesToShow = showAll\n\t\t? notes\n\t\t: notes.filter(note => note.important);\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Notes</h1>\n\t\t\t<Notification message={errorMessage} dismiss={() => setErrorMessage(null)}/>\n\t\t\t<div>\n\t\t\t\t<button onClick={() => setShowAll(!showAll)}>\n\t\t\t\t\tshow {showAll ? 'important' : 'all'}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<ul>\n\t\t\t\t{notesToShow.map(note =>\n\t\t\t\t\t<Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)} />\n\t\t\t\t)}\n\t\t\t</ul>\n\t\t\t<form onSubmit={addNote}>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={newNote}\n\t\t\t\t\tonChange={handleNoteChange} />\n\t\t\t\t<button type=\"submit\">save</button>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './components/App'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}